//BRUTE SOLUTION.....................................................................................................................................................................................................................................................
    int majorityElement(vector<int>& nums) {

        int n=nums.size();
        for(int i=0; i<nums.size(); i++){
            int cnt=0;
            int a=nums[i];
            for(int j=0;j<nums.size(); j++){
                if(a==nums[j]){
                cnt++;
                }
            }
            if(cnt>n/2){
                return a;
            }
        }
        return -1;
    }


//BETTER SOLUTION........................................................................................................................................................................................................................................................

    int majorityElement(vector<int>& nums) {
        map<int,int>mpp;

        for(int i=0; i<nums.size(); i++){
            mpp[nums[i]]++;
        }

        for(auto i : mpp){
            if(i.second>nums.size()/2){
                return i.first;
            }
        }
        return -01;
    }  

//OPTIMAL SOLUTION...............................................................................................................................................................................................................................................

    int majorityElement(vector<int>& nums) {
        int cnt=0;
        int e1;
        for(int i=0; i<nums.size(); i++){
            if(cnt==0){
                e1=nums[i];
                cnt=1;
            }

            else if(e1==nums[i]){
                cnt++;
            }
            else{
                cnt--;
            }
        }

        int cnt1=0;
        for(int i=0; i<nums.size(); i++){
            if(nums[i]==e1){
                cnt1++;
            }

            if(cnt1>(nums.size()/2)){
                return e1;
            }
        }
        return -1;
    }  

