//Brute solution...................................................................................................................................................................................................
int missingNumber(vector<int>& nums) {
        int index;
        for(int i=0; i<= nums.size(); i++){
            int flag=0;
            for(int j=0; j<nums.size(); j++){
                if (nums[j]==i){
                    flag=1;
                    break;
                }
            }
            if(flag==0){
                flag=0;
                index=i;
                break;
            }
        }

        return index;
        
    }

//Better Solution.............................................................................................................................................................................................................................................

    int missingNumber(vector<int>& nums) {
        int n=nums.size();
        vector <int> arr(n+1,0);

        for(int i=0; i<n; i++){
            arr[nums[i]]=1;
        }

        for(int i=0; i<n+1; i++){
            if(arr[i]==0){
                return i;
            }
        }

        return -1;

//Optimized Solution...........................................................................................................................................................................................................................................
//Method--1;
int missingNumber(vector<int>& nums) {
        int sum1=0;
        int sum2=0;
        int n=nums.size();
        

        for(int i=0; i<n; i++){
            sum1+=nums[i];
        }

        sum2=(n*(n+1))/2;


    return sum2-sum1;
    }

//METHOD-- 2;


    
